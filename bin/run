#!/usr/bin/env bash

ENTRY="com.micronautics.Main"

# Sample usage:
# bin/run -j [entryPoint]
#
# -j option forces rebuild of jar
# entryPoint defaults to $ENTRY

function help {
  echo "This script generates runs the program in various modes.

To run this script in debug mode so a debugger can remotely attach to it, use the -d option:
    bin/run -d

To run this script from SBT, use the -S option:
    bin/run -S

When not running in debug mode, this script builds a fat jar, which takes longer the first time it runs, but speeds up subsequent invocations.
The -j option forces a rebuild of the jar:
    bin/run -j

Do not specify both options -j and -d.
"
  exit
}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."
cd "$DIR"

# Scan build.sbt for program name, Scala version and program version
function findValue {
  echo "$( grep "$1 :=" build.sbt | cut -d' ' -f 3 | tr -d \" )"
}

SCALA_VERSION() {
  V=`grep "scalaVersion :=" build.sbt |  cut -d' ' -f 3 | tr -d \"`
   case $V in
    2.10.*) echo 2.10 ;;
    2.11.*) echo 2.11 ;;
    2.12.*) echo 2.12 ;;
    2.13.*) echo 2.13 ;;
     3.0.*)  echo 3.0 ;;
     3.1.*)  echo 3.1 ;;
         *) echo UNKNOWN ;;
  esac
}

NAME="$( findValue name )"
VERSION="$( findValue version )"
JAR=target/scala-`SCALA_VERSION`/$NAME-assembly-$VERSION.jar

while getopts ":hdSj" opt; do
  case ${opt} in
    d) DEBUG="-J-Xdebug -J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
       export CLI_LOGGER=DEBUG
       RUN_SBT=true
       shift
       ;;
    h) help ;;
    j) BUILD_JAR=true
       shift
       ;;
    S) RUN_SBT=true
       export CLI_LOGGER=DEBUG
       shift
       ;;
  esac
done

function runFatJar {
  NAME="$( findValue name )"
  VERSION="$( findValue version )"
  JAR=target/scala-`SCALA_VERSION`/$NAME-assembly-$VERSION.jar

  if [ "$BUILD_JAR" ] || [ ! -f $JAR ]; then
    echo "Building $JAR"
    sbt assembly

    if [ "$1" == -j ]; then shift; fi
  fi

  java -cp "$JAR" "$ENTRY" \
    $DRY_RUN \
    $KEEP_AFTER \
    $PRESERVE_INDEX \
    "$@"
}

if [ "$RUN_SBT" ]; then
  # See https://stackoverflow.com/a/29838365/553865
  sbt --error $DEBUG "runMain $ENTRY $DRY_RUN $KEEP_AFTER $PRESERVE_INDEX $*"
else
  runFatJar "$@"
fi
